import axios from "axios";
import { authHeader } from "../../Services/Auth"; // Utilisation de authHeader pour ajouter le token si n√©cessaire

// üöÄ R√©cup√©rer tous les dossiers m√©dicaux
export const fetchMedicalRecords = async () => {
  try {
    const { data } = await axios.get('medical', {
      headers: authHeader(), // En-t√™te d'authentification
    });

    // V√©rification de la r√©ponse de l'API et renvoi des donn√©es appropri√©es
    if (data.success) {
      return data.records; // Si la r√©ponse contient `records`, on les retourne
    } else {
      console.error("Aucun dossier m√©dical trouv√©.");
      return []; // Retourner un tableau vide en cas d'absence de donn√©es
    }
  } catch (error) {
    // Log d√©taill√© pour d√©bogage, capture des erreurs sp√©cifiques du backend ou r√©seau
    console.error("Erreur lors de la r√©cup√©ration des dossiers m√©dicaux:", error);
    // Gestion des erreurs sp√©cifiques
    throw new Error(error.response?.data?.message || "Erreur serveur");
  }
};

// üöÄ R√©cup√©rer un dossier m√©dical sp√©cifique par son ID
export const fetchMedicalRecordById = async (id) => {
  try {
    const { data } = await axios.get(`medical/${id}`, {
      headers: authHeader(), // En-t√™te d'authentification
    });

    // Si le serveur retourne un succ√®s, on retourne le dossier
    if (data.success) {
      return data.record; // Retourne le dossier m√©dical
    } else {
      console.error(`Dossier m√©dical avec ID ${id} non trouv√©.`);
      return null; // Retourne null si aucun dossier n'a √©t√© trouv√©
    }
  } catch (error) {
    // Log d√©taill√© pour d√©bogage
    console.error(`Erreur lors de la r√©cup√©ration du dossier m√©dical avec l'ID ${id}:`, error);
    throw new Error(error.response?.data?.message || "Erreur serveur");
  }
};

// üöÄ R√©cup√©rer le dossier m√©dical de l'utilisateur connect√©
export const fetchMedicalRecordByUser = async () => {
  try {
    const { data } = await axios.get('medical/me', {
      headers: authHeader(), // En-t√™te d'authentification
    });

    // Si le serveur retourne un succ√®s, on retourne le dossier
    if (data.success) {
      return data.record; // Retourne le dossier m√©dical
    } else {
      console.error('Dossier m√©dical non trouv√©.');
      return null; // Retourne null si aucun dossier n'a √©t√© trouv√©
    }
  } catch (error) {
    // Log d√©taill√© pour d√©bogage
    console.error('Erreur lors de la r√©cup√©ration du dossier m√©dical de l\'utilisateur connect√©:', error);
    throw new Error(error.response?.data?.message || "Erreur serveur");
  }
};

// üöÄ Mettre √† jour un dossier m√©dical par son ID
export const updateMedicalRecord = async ({ id, updates }) => {
  try {
    const { data } = await axios.put(`medical/${id}`, updates, {
      headers: authHeader(), // En-t√™te d'authentification
    });

    // V√©rification de la r√©ponse et gestion des erreurs
    if (data.success) {
      console.log("Dossier m√©dical mis √† jour avec succ√®s.");
      return data.record; // Retourne le dossier mis √† jour
    } else {
      console.error("Erreur lors de la mise √† jour du dossier m√©dical.");
      return null; // Retourne null si la mise √† jour √©choue
    }
  } catch (error) {
    // Log de l'erreur et gestion d'erreur
    console.error(`Erreur lors de la mise √† jour du dossier m√©dical avec l'ID ${id}:`, error);
    throw new Error(error.response?.data?.message || "Erreur serveur");
  }
};

// üöÄ Supprimer un dossier m√©dical par son ID
export const deleteMedicalRecord = async (id) => {
  try {
    const { data } = await axios.delete(`medical/${id}`, {
      headers: authHeader(), // En-t√™te d'authentification
    });

    // V√©rification de la r√©ponse et gestion des erreurs
    if (data.success) {
      console.log("Dossier m√©dical supprim√© avec succ√®s.");
      return data; // Retourne une r√©ponse confirmant la suppression
    } else {
      console.error(`Erreur lors de la suppression du dossier m√©dical avec l'ID ${id}.`);
      return null; // Retourne null si la suppression √©choue
    }
  } catch (error) {
    // Log de l'erreur et gestion des erreurs r√©seau ou serveur
    console.error(`Erreur lors de la suppression du dossier m√©dical avec l'ID ${id}:`, error);
    throw new Error(error.response?.data?.message || "Erreur serveur");
  }
};